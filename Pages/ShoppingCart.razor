@page "/shoppingcart"
@inject ProtectedLocalStorage _cartStorage

@if (shoppingCarts == null)
{

    <div class="row">
        <div class="col text-center"> <img height="200" src="https://cdn.dribbble.com/users/108183/screenshots/5331825/loading_xxi.gif" /></div>
    </div>

}
else if (shoppingCarts.Count > 0)
{
    <div class="row table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Price</th>
                    <th>Shade Color</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in shoppingCarts)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Category.Name</td>
                        <td>@item.Price</td>
                        <td>@item.ShadeColor</td>
                        @*<td>@ImageToDisplayConverter(item.Image)</td>*@
                        <td class="text-right">
                            <div class="btn-group">
                                <button @onclick="(()=> Details(item))" class="btn btn-outline-success">Details</button>
                                <button @onclick="(()=> DeleteFromCart(item))" class="btn btn-outline-danger">Delete</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="row">
        <div class="col text-center"> <img height="200" src="https://cdn.dribbble.com/users/1231865/screenshots/11157048/media/bc9427646c632ded563ee076fdc5dfda.jpg?compress=1&resize=800x600" /></div>
    </div>
}

@code {
    List<int> shoppingCarts = new();

    protected override async Task OnInitializedAsync()
    {
        shoppingCarts = await _cartStorage.GetFromSession<List<int>>(StaticData.SessionKey);
    }

    void Details(int id)
    {

    }

    void DeleteFromCart(int id)
    {

    }
    string ImageToDisplayConverter(byte[] image)
    {
        if (image is null)
            return "";

        var base64 = Convert.ToBase64String(image);
        var finalString = string.Format("data:image/jpg;base64,{0}", base64);
        return finalString;

    }
}
