@page "/details/{ProductId:int}"
@inject IRepositoryProduct _db
@inject ProtectedLocalStorage _cartStorage

<h1 class="text-info mt-2">@(showAppointment ? "Book Appoinment" : "Appointment Details")</h1>

@if (AppointmentObj.Product is not null)
{
    @if (showAppointment)
    {
        <AppointmentComponent Appointment="AppointmentObj" OnShowDetails="ShowDetails" />
    }
    else
    {
        <DetailsComponent OnAddToCart="AddToCart" Appointment="AppointmentObj" />
    }
}


@code {
    [Parameter] public int ProductId { get; set; }
    public Appointment AppointmentObj { get; set; }
    List<int> listOfShopingCart = new();
    int productCount = 0;

    bool showAppointment = false;

    protected override async Task OnInitializedAsync()
    {
        AppointmentObj = new()
        {
            AppointmentDate = DateTime.Now
        };

        AppointmentObj.Product = await _db.GetSingleProductAsync(ProductId);
    }
    void OnAddToCart() => showAppointment = true;
    void ShowDetails() => showAppointment = false;

    async Task AddToCart()
    {
        if (listOfShopingCart is null)
            listOfShopingCart = new();

        if (listOfShopingCart is not null)
            listOfShopingCart.Add(ProductId);

        await _cartStorage.SetInSession<List<int>>(StaticData.SessionKey, listOfShopingCart);


        if (listOfShopingCart is not null)
            productCount = listOfShopingCart.Count;

        StateHasChanged();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        listOfShopingCart = await _cartStorage.GetFromSession<List<int>>(StaticData.SessionKey);

    }
}
