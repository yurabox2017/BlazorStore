@inherits OwningComponentBase<IRepositoryAppointment>
@inject IRepositoryProduct _dbProduct
@inject NavigationManager _navManager

@using BlazorStore.Merchant.Paypal

<div class="container rounded border p-2">
    <div class="row"> <div class="col"><h1 class="text-info">Confirm Appointment</h1></div></div>
    <div class="row">
        <EditForm class="col-8" Model="@Appointment" OnValidSubmit="@ValidSubmit">

            <div class="row form-group">
                <div class="col-8 offset-4">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                </div>
            </div>
            <div class="row form-group">
                <div class="col-4">Name:</div>
                <div class="col-8"><InputText class="form-control" @bind-Value="@Appointment.CustomerName" /></div>
            </div>
            <div class="row form-group">
                <div class="col-4">Email:</div>
                <div class="col-8"><input type="email" class="form-control" @bind="@Appointment.Email" /></div>
            </div>
            <div class="row form-group">
                <div class="col-4">Phone:</div>
                <div class="col-8"><input type="tel" class="form-control" @bind="@Appointment.CustomerPhone" /></div>
            </div>
            <div class="row form-group">
                <div class="col-4">Date:</div>
                <div class="col-8"><InputDate class="form-control" @bind-Value="@Appointment.AppointmentDate" /></div>
            </div>
            <div class="row form-group">
                <div class="col-4 offset-4"><button @onclick="Back" class="btn btn-primary form-control">Back</button></div>
                <div class="col-4">
                    <form action="@payPalConfig.PostUrl" method="post">
                        <input type="hidden" name="cmd" value="_cart" />
                        <input type="hidden" name="upload" value="1" />
                        <input type="hidden" name="business" value="@payPalConfig.Business" />
                        <input type="hidden" name="currency_code" value="RUB" />

                        @foreach (var item in Products)
                        {
                            <input type="hidden" name="item_name_@count" value="@item.Name" />
                            <input type="hidden" name="amount_@count" value="@item.Price.ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                            <input type="hidden" name="quantity_@count" value="@item.Quantity" />
                            count++;
                        }
                        <input type="submit" value="Make Appointment" class="btn btn-success form-control" />
                    </form>
                </div>
            </div>
        </EditForm>
    </div>
</div>


@code {
    [Parameter] public EventCallback Back { get; set; }
    [Parameter] public Appointment Appointment { get; set; }
    [Parameter] public List<Product> Products { get; set; }
    private PayPalConfig payPalConfig;

    int count = 1;

    protected override void OnInitialized()
    {
        payPalConfig = Paypal.GetPayPalConfig();
        Appointment.AppointmentDate = DateTime.Now;

    }

    async Task ValidSubmit()
    {
        var result = await Service.CreateAppointmentAsync(Appointment, Products);

        if (result)
        {
            //await _cartStorage.DeleteAsync(StaticData.SessionKey);

            _navManager.NavigateTo("appointmentbooked");
        }
    }
}